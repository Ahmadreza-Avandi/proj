# راهنمای جامع دیپلوی پروژه سیستم حضور و غیاب روی VPS با SSL

## مرحله ۱: پاکسازی نصب قبلی از روی VPS
```bash
# اتصال به VPS
ssh username@your_server_ip

# حذف پروژه قبلی (در صورت وجود)
cd /path/to/projects
rm -rf proj

# توقف و حذف کانتینرهای قبلی
cd proj
docker-compose down
docker system prune -a --volumes --force
```

## مرحله ۲: دریافت کد جدید از مخزن گیت‌هاب
```bash
# کلون کردن مخزن جدید
git clone https://github.com/Ahmadreza-Avandi/proj.git
cd proj
```

## مرحله ۳: تنظیم گواهی‌نامه SSL
```bash
# ایجاد پوشه برای گواهی‌نامه‌های SSL
mkdir -p certs

# انتقال گواهی‌نامه‌های SSL به پوشه certs
cp /path/to/ssl/fullchain.pem certs/
cp /path/to/ssl/privkey.pem certs/
```

## مرحله ۴: تنظیم فایل‌های محیطی
```bash
# ایجاد فایل .env برای Nest.js
cat > nest/.env << EOL
DATABASE_URL="mysql://user:userpassword@mysql:3306/mydatabase"
EOL

# ایجاد فایل .env.local برای Next.js
cat > next/.env.local << EOL
NEXT_PUBLIC_API_URL=https://your_domain.com:3001
DATABASE_URL="mysql://user:userpassword@mysql:3306/mydatabase"
EOL
```

## مرحله ۵: به‌روزرسانی آدرس‌های دیتابیس
```bash
# جایگزینی تمام آدرس‌های اتصال به دیتابیس در فایل‌های API
find ./next/pages/api -type f -name "*.ts" -exec sed -i 's|mysql:\/\/root:@localhost:3306\/proj|mysql:\/\/user:userpassword@mysql:3306\/mydatabase|g' {} \;
```

## مرحله ۶: ایجاد و راه‌اندازی کانتینرها
```bash
# ساخت کانتینرها
docker-compose build --no-cache

# راه‌اندازی کانتینرها در پس‌زمینه
docker-compose up -d
```

## مرحله ۷: اجرای مایگریشن‌های Prisma
```bash
# دسترسی به کانتینر backend
docker exec -it proj_backend_1 sh

# اجرای مایگریشن‌ها
npx prisma migrate deploy

# خروج از کانتینر
exit
```

## مرحله ۸: تنظیم داده‌های اولیه
```bash
# دسترسی به کانتینر MySQL
docker exec -it proj_mysql_1 mysql -u user -puserpassword mydatabase -e "
INSERT INTO Role (id, name, permissions) 
VALUES 
(1, 'Admin', '{\"viewPlaces\":true,\"editPlaces\":true,\"deletePlaces\":true,\"viewPersons\":true,\"editPersons\":true,\"deletePersons\":true,\"viewRoles\":true,\"editRoles\":true,\"deleteRoles\":true}');

INSERT INTO User (fullName, nationalCode, phoneNumber, password, roleId) 
VALUES 
('amirali hashemipoor', '3381608681', '09369890707', '\$2b\$12\$F.VzTzQhGZ6uXod2oeNUuewqVFL/XiOD/8v47GtTHRleh5CN0ORrO', 1);
"
```

## مرحله ۹: تنظیم فایروال و پورت‌های مورد نیاز
```bash
# باز کردن پورت‌های مورد نیاز در فایروال (با استفاده از UFW)
sudo ufw allow 22/tcp      # SSH
sudo ufw allow 80/tcp      # HTTP
sudo ufw allow 443/tcp     # HTTPS
sudo ufw allow 3000/tcp    # Next.js
sudo ufw allow 3001/tcp    # Nest.js
```

## مرحله ۱۰: تنظیم دامنه و SSL
```bash
# تنظیم رکورد DNS برای دامنه به IP سرور
# example.com و www.example.com باید به IP سرور VPS شما اشاره کنند

# نصب Certbot برای SSL خودکار (اختیاری - اگر از Let's Encrypt استفاده می‌کنید)
sudo apt update
sudo apt install certbot

# دریافت گواهینامه SSL
sudo certbot certonly --standalone -d your_domain.com -d www.your_domain.com

# کپی گواهینامه های جدید به پوشه پروژه
sudo cp /etc/letsencrypt/live/your_domain.com/fullchain.pem certs/
sudo cp /etc/letsencrypt/live/your_domain.com/privkey.pem certs/
sudo chmod 644 certs/fullchain.pem certs/privkey.pem

# راه‌اندازی مجدد کانتینرها
docker-compose restart frontend
```

## مرحله ۱۱: بررسی وضعیت سرویس‌ها
```bash
# مشاهده لاگ‌ها برای اطمینان از راه‌اندازی موفق
docker-compose logs -f

# بررسی وضعیت کانتینرها
docker-compose ps
```

## دسترسی به سرویس‌ها
- **Frontend (Next.js)**: https://your_domain.com:3000 یا https://your_server_ip:3000
- **API (Nest.js)**: https://your_domain.com:3001 یا https://your_server_ip:3001

## عیب‌یابی متداول

### مشکل در اتصال به دیتابیس
```bash
# بررسی وضعیت سرویس MySQL
docker-compose ps mysql
docker-compose logs mysql

# اصلاح مشکل با ریست کردن دیتابیس
docker-compose restart mysql
```

### مشکل در گواهینامه‌های SSL
```bash
# بررسی مسیر و دسترسی‌های فایل‌های SSL
ls -la certs/

# مطمئن شوید که کانتینر frontend به فایل‌های SSL دسترسی دارد
docker exec -it proj_frontend_1 ls -la /certs/
```

### خطای دسترسی به پورت‌ها
```bash
# بررسی پورت‌های در حال استفاده
sudo netstat -tulpn | grep LISTEN

# بستن برنامه‌هایی که پورت‌های مورد نیاز را اشغال کرده‌اند
sudo fuser -k 3000/tcp
sudo fuser -k 3001/tcp
```

### بروزرسانی پروژه در آینده
```bash
# توقف کانتینرها
docker-compose down

# دریافت آخرین تغییرات
git pull

# بازسازی و راه‌اندازی مجدد
docker-compose build --no-cache
docker-compose up -d
```

docker

git clone https://github.com/amirzerok/system-docker-rolebase.git



cd attendance-newlayout-all

cd system-docker-rolebase





create .env file

cd project-name

touch .env

nano .env


DATABASE_URL="mysql://user:userpassword@mysql:3306/mydatabase"


 تغییر نام فایل‌ها داخل کانتینر:



docker exec -it attendance-newlayout-all_nextjs_1 sh -c "mv /certs/fullchain1.pem /certs/fullchain.pem && mv /certs/privkey1.pem /certs/privkey.pem"




docker system prune -a


docker start system-mysql-1    

docker-compose build --no-cache

docker-compose up --build 

docker-compose up 

docker-compose up -d


docker compose down 




prisma 

docker ps

docker exec -it attendance-newlayout-all_nestjs_1 sh


npx prisma migrate deploy


npx prisma migrate dev --name init



querry


INSERT INTO Role (id, name, permissions) 
VALUES 
(1, 'Admin', '{"viewPlaces":true,"editPlaces":true,"deletePlaces":true,"viewPersons":true,"editPersons":true,"deletePersons":true,"viewRoles":true,"editRoles":true,"deleteRoles":true}');



INSERT INTO User (fullName, nationalCode, phoneNumber, password, roleId) 
VALUES 
('amirali hashemipoor', '3381608681', '09369890707', '$2b$12$F.VzTzQhGZ6uXod2oeNUuewqVFL/XiOD/8v47GtTHRleh5CN0ORrO', 1);



docker exec -it attendance-newlayout-all_nestjs_1 sh
